import { defineConfig } from 'eslint/config';

export const possibleErrors = defineConfig([
	{
		rules: {
			'no-async-promise-executor': 'error',
			'no-await-in-loop': 'error',
			'no-compare-neg-zero': 'error',
			'no-cond-assign': 'error',
			'no-console': 'warn',
			'no-constant-condition': 'warn',
			'no-control-regex': 'error',
			'no-debugger': 'warn',
			'no-dupe-args': 'error',
			'no-dupe-else-if': 'warn',
			'no-dupe-keys': 'warn',
			'no-duplicate-case': 'error',
			'no-empty-character-class': 'warn',
			'no-empty': ['warn', { allowEmptyCatch: true }],
			'no-ex-assign': 'warn',
			'no-extra-boolean-cast': 'warn',
			'no-extra-semi': 'warn',
			'no-func-assign': 'error',
			'no-import-assign': 'error',
			'no-inner-declarations': 'error',
			'no-invalid-regexp': 'error',
			'no-irregular-whitespace': 'warn',
			'no-misleading-character-class': 'error',
			'no-obj-calls': 'error',
			'no-regex-spaces': 'warn',
			'no-sparse-arrays': 'warn',
			'no-template-curly-in-string': 'warn',
			'no-unexpected-multiline': 'warn',
			'no-unreachable': 'warn',
			'no-unsafe-finally': 'warn',
			'no-unsafe-negation': 'error',
			'require-atomic-updates': 'error',
			'use-isnan': 'error',
			'valid-typeof': 'error',
		},
	},
]);
