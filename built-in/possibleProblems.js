import { defineConfig } from 'eslint/config';

export const possibleProblems = defineConfig([
	{
		rules: {
			'array-callback-return': 'warn',
			'constructor-super': 'error',
			'no-async-promise-executor': 'error',
			'no-await-in-loop': 'error',
			'no-class-assign': 'error',
			'no-compare-neg-zero': 'error',
			'no-cond-assign': 'error',
			'no-const-assign': 'error',
			'no-constant-condition': 'warn',
			'no-control-regex': 'error',
			'no-debugger': 'warn',
			'no-dupe-args': 'error',
			'no-dupe-class-members': 'warn',
			'no-dupe-else-if': 'warn',
			'no-dupe-keys': 'warn',
			'no-duplicate-case': 'error',
			'no-duplicate-imports': 'warn',
			'no-empty-character-class': 'warn',
			'no-empty-pattern': 'error',
			'no-ex-assign': 'warn',
			'no-fallthrough': 'error',
			'no-func-assign': 'error',
			'no-import-assign': 'error',
			'no-inner-declarations': 'error',
			'no-invalid-regexp': 'error',
			'no-irregular-whitespace': 'warn',
			'no-misleading-character-class': 'error',
			'no-new-native-nonconstructor': 'error',
			'no-obj-calls': 'error',
			'no-self-assign': 'error',
			'no-self-compare': 'error',
			'no-sparse-arrays': 'warn',
			'no-template-curly-in-string': 'warn',
			'no-this-before-super': 'error',
			'no-undef': 'error',
			'no-unexpected-multiline': 'warn',
			'no-unreachable': 'warn',
			'no-unsafe-finally': 'warn',
			'no-unsafe-negation': 'error',
			'no-unused-vars': [
				'warn',
				{
					args: 'after-used',
					ignoreRestSiblings: true,
				},
			],
			'no-use-before-define': [
				'error',
				{
					functions: false,
				},
			],
			'require-atomic-updates': 'error',
			'use-isnan': 'error',
			'valid-typeof': 'error',
		},
	},
]);
