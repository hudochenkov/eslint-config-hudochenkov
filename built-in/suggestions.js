import { defineConfig } from 'eslint/config';

export const suggestions = defineConfig([
	{
		rules: {
			camelcase: 'warn',
			'consistent-return': 'warn',
			curly: ['warn', 'all'],
			'default-param-last': 'warn',
			'dot-notation': 'warn',
			eqeqeq: [
				'error',
				'always',
				{
					null: 'ignore',
				},
			],
			'func-names': ['warn', 'as-needed'],
			'func-style': ['warn', 'declaration'],
			'init-declarations': 'off',
			'max-params': [
				'warn',
				{
					max: 3,
				},
			],
			'no-alert': 'warn',
			'no-bitwise': 'warn',
			'no-caller': 'error',
			'no-case-declarations': 'error',
			'no-console': 'warn',
			'no-delete-var': 'error',
			'no-div-regex': 'warn',
			'no-else-return': 'warn',
			'no-empty': [
				'warn',
				{
					allowEmptyCatch: true,
				},
			],
			'no-eq-null': 'error',
			'no-eval': 'warn',
			'no-global-assign': 'error',
			'no-implicit-coercion': [
				'error',
				{
					allow: ['!!'],
				},
			],
			'no-implied-eval': 'error',
			'no-lone-blocks': 'error',
			'no-lonely-if': 'warn',
			'no-multi-assign': 'error',
			'no-nested-ternary': 'warn',
			'no-octal-escape': 'error',
			'no-octal': 'error',
			'no-param-reassign': 'error',
			'no-redeclare': 'error',
			'no-regex-spaces': 'warn',
			'no-return-assign': 'error',
			'no-script-url': 'error',
			'no-sequences': 'error',
			'no-shadow-restricted-names': 'error',
			'no-shadow': 'warn',
			'no-throw-literal': 'error',
			'no-undef-init': 'warn',
			'no-unneeded-ternary': 'warn',
			'no-useless-call': 'warn',
			'no-useless-catch': 'warn',
			'no-useless-computed-key': 'warn',
			'no-useless-concat': 'warn',
			'no-useless-constructor': 'warn',
			'no-useless-escape': 'warn',
			'no-useless-rename': 'warn',
			'no-useless-return': 'warn',
			'no-var': 'error',
			'no-with': 'error',
			'object-shorthand': 'warn',
			'one-var': ['warn', 'never'],
			'prefer-arrow-callback': 'off',
			'prefer-const': 'off',
			'prefer-object-spread': 'warn',
			'prefer-promise-reject-errors': 'error',
			'prefer-rest-params': 'warn',
			'prefer-spread': 'warn',
			'prefer-template': 'off',
			radix: 'error',
			'require-await': 'warn',
			yoda: 'warn',
		},
	},
]);
